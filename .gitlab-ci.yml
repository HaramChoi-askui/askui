#############
# VARIABLES #
#############

variables:
  CI_EMAIL: ${GITLAB_USER_EMAIL}
  CI_USERNAME: ${GITLAB_USER_LOGIN}
  CONTROL_UI_WITH_BROWSER_CONTAINER_VERSION: v0.8.0
  NPM_TOKEN: ${GITLAB_TOKEN}
  RELEASE_FLAGS:
    description: 'Flags (space-separated) to be passed to the release command, e.g., "--no-increment --no-npm".'
  RELEASE_TYPE: 
    value: no_release
    description: |
      The release type. Change this variable to
        - "release" to release version x.x.x to @latest distribution channel, 
        - "release:prerelease" to release x.x.x-next.x to @next distribution channel,
        - "release:docs" to release (only) current documentation,
        - "release:feature" to release (only) npm package with spacial name, version and tag for testing.
  WORKDIR: ${CI_PROJECT_DIR}

##########
# STAGES #
##########

stages:
  - build
  - quality
  - release
  - build-docs
  - release-docs

###########
# DEFAULT #
###########

default:
  image: node:16.13
  before_script:
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${NPM_TOKEN}"
      } | tee -a .npmrc
    - npm ci --cache .npm --prefer-offline
    - cd ${WORKDIR}
  tags:
    - local
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

#########
# RULES #
#########

.rules:mr-and-main: &rules-mr-and-main
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == 'main'

.rules:release: &rules-release
  - if: $CI_COMMIT_BRANCH == 'main' && ($RELEASE_TYPE == 'release' || $RELEASE_TYPE == 'release:prerelease')

.rules:release:feature: &rules-release-feature
  - if: $RELEASE_TYPE == 'release:feature'

.rules:release:docs: &rules-release-docs
  - if: $RELEASE_TYPE == 'release:docs'

########
# JOBS #
########

prep-cache:
  rules: 
    - *rules-mr-and-main
    - *rules-release-feature
  stage: .pre
  script:
    - echo "Cache successfully prepared"

build:
  rules: *rules-mr-and-main
  variables:
    WORKDIR: packages/askui-nodejs
  stage: build
  script:
    - npm run build

lint:
  rules: *rules-mr-and-main
  stage: quality
  script:
    - npm run lint

test:
  rules: *rules-mr-and-main
  stage: quality
  script:
    - npm run test

.examples:askui-nodejs-base-example:
  stage: quality
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes: ['examples/askui-nodejs-base-example/**/*']
    - if: $CI_COMMIT_BRANCH == 'main'
      changes: ['examples/askui-nodejs-base-example/**/*']
  before_script:
    - !reference [default, before_script]
    - cd examples/askui-nodejs-base-example
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${NPM_TOKEN}"
      } | tee -a .npmrc
    - npm ci --cache ../../.npm --prefer-offline

examples:askui-nodejs-base-example:lint:
  extends:
    - .examples:askui-nodejs-base-example
  script:
    - npm run lint

# TODO: Reenable after enough space has been created on the runner machine
# examples:askui-nodejs-base-example:test:
#   extends:
#     - .examples:askui-nodejs-base-example
#   parallel:
#     matrix:
#       - BROWSER: chrome
#         BROWSER_VERSIONS: [100.0.4896.60, 99.0.4844.51, 97.0.4692.71, 90.0.4430.212]
#         SCREEN_RESOLUTION: ['3840x2160', '1920x1080', '1280x720', '852x480']
#       - BROWSER: firefox
#         BROWSER_VERSIONS: [98.0.2, 97.0.2, 96.0.3, 82.0.3]
#         SCREEN_RESOLUTION: ['3840x2160', '1920x1080', '1280x720', '852x480']
#   services:
#     - name: registry.gitlab.com/vqa4gui/mvp/control-your-ui/browser/${BROWSER}:${CONTROL_UI_WITH_BROWSER_CONTAINER_VERSION}-${BROWSER_VERSIONS}-amd64
#       alias: askui-runner
#   script:
#     - npm run test
#   artifacts:
#       paths:
#         - report/
#       expire_in: 1 week

release:
  rules: *rules-release
  stage: release
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  before_script:
    - !reference [default, before_script]
    - 'which ssh-agent || ( apt-get update -qy && apt-get install openssh-client -qqy )'
    - eval `ssh-agent -s`
    - cat "${SSH_PRIVATE_KEY}" | ssh-add - > /dev/null
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo -e "Host $CI_SERVER_HOST\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - git remote set-url origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
    - git config --global user.name "${CI_USERNAME}"
    - git config --global user.email "${CI_EMAIL}"
    - git checkout ${CI_COMMIT_REF_NAME}
    - npm run ${RELEASE_TYPE} -- ${RELEASE_FLAGS}

release:feature:
  stage: release
  rules: *rules-release-feature
  variables:
    WORKDIR: packages/askui-nodejs
  script:
    - apt-get update && apt-get install -y jq
    - echo $(cat package.json | jq '.name="@vqa4gui/askui-dev"') > package.json
    - npm version $(node -e "console.log(require('./package.json').version);")-${CI_COMMIT_BRANCH}${CI_COMMIT_SHORT_SHA} --no-git-tag-version
    - npm run build
    - npm publish

docs:build:
  stage: build-docs
  rules: 
    - if: $CI_MERGE_REQUEST_IID
      changes: ['docs/**/*']
    - if: $CI_COMMIT_BRANCH == 'main'
      changes: ['docs/**/*']
    - *rules-release
    - *rules-release-docs
  variables:
    DOCS_BASE_URL: /mvp/askui/
    WORKDIR: docs
  script:
    - npm run build
  artifacts:
    paths:
      - ${WORKDIR}/dist

pages:
  rules:
    - if: |
        $CI_COMMIT_BRANCH == 'main' && 
        ($RELEASE_TYPE == 'release' || $RELEASE_TYPE == 'release:prerelease') &&
        $RELEASE_FLAGS !~ /.*--dry-run.*/
    - *rules-release-docs
  stage: release-docs
  variables:
    WORKDIR: docs
  dependencies:
    - docs:build
  script:
    - mv dist ${CI_PROJECT_DIR}/public
  artifacts:
    paths:
      - public
